@model List<NailMVC.Models.KhuyenMai>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Quản lý Khuyến mãi";
}

<h2 class="text-primary mb-4">Danh sách khuyến mãi</h2>

<div class="d-flex justify-content-end mb-3">
    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addModal">➕ Thêm khuyến mãi</button>
</div>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Tên KM</th>
            <th>Mô tả</th>
            <th>Giảm (%)</th>
            <th>Bắt đầu</th>
            <th>Kết thúc</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.TenKhuyenMai</td>
                <td>@item.MoTa</td>
                <td>@item.PhanTramGiam%</td>
                <td>@item.NgayBatDau?.ToString("dd/MM/yyyy")</td>
                <td>@item.NgayKetThuc?.ToString("dd/MM/yyyy")</td>
                <td>
                    <button class="btn btn-sm btn-warning me-1" onclick="showEditModal(@item.Id)">Sửa</button>
                    <button class="btn btn-sm btn-danger" onclick="deleteKhuyenMai(@item.Id)">Xoá</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal Thêm -->
<div class="modal fade" id="addModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Thêm khuyến mãi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createForm">
                    <div class="row g-3">
                        <div class="col-md-6"><label>Tên khuyến mãi</label><input class="form-control" name="TenKhuyenMai" required /></div>
                        <div class="col-md-6"><label>Phần trăm giảm</label><input class="form-control" name="PhanTramGiam" type="number" required /></div>
                        <div class="col-md-12"><label>Mô tả</label><textarea class="form-control" name="MoTa"></textarea></div>
                        <div class="col-md-6"><label>Ngày bắt đầu</label><input type="date" class="form-control" name="NgayBatDau" /></div>
                        <div class="col-md-6"><label>Ngày kết thúc</label><input type="date" class="form-control" name="NgayKetThuc" /></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button class="btn btn-primary" onclick="submitForm()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sửa -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5 class="modal-title">Sửa khuyến mãi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" name="Id" />
                    <div class="row g-3">
                        <div class="col-md-6"><label>Tên khuyến mãi</label><input class="form-control" name="TenKhuyenMai" required /></div>
                        <div class="col-md-6"><label>Phần trăm giảm</label><input class="form-control" name="PhanTramGiam" type="number" required /></div>
                        <div class="col-md-12"><label>Mô tả</label><textarea class="form-control" name="MoTa"></textarea></div>
                        <div class="col-md-6"><label>Ngày bắt đầu</label><input type="date" class="form-control" name="NgayBatDau" /></div>
                        <div class="col-md-6"><label>Ngày kết thúc</label><input type="date" class="form-control" name="NgayKetThuc" /></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button class="btn btn-primary" onclick="submitEditForm()">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = "@ViewBag.ApiBaseUrl";

        function submitForm() {
            const formData = new FormData(document.getElementById("createForm"));
            const obj = {};
            formData.forEach((v, k) => { if (v) obj[k] = v; });

            fetch(apiBaseUrl + "KhuyenMai", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(obj)
            }).then(r => {
                if (r.ok) Swal.fire("Thành công!", "Đã thêm khuyến mãi.", "success").then(() => location.reload());
                else throw new Error("Lỗi thêm khuyến mãi");
            }).catch(e => Swal.fire("Thất bại!", e.message, "error"));
        }

        function showEditModal(id) {
            fetch(`${apiBaseUrl}KhuyenMai/${id}`)
                .then(res => res.json())
                .then(data => {
                    const form = document.getElementById("editForm");
                    for (let key in data) {
                        const input = form.querySelector(`[name="${key}"]`);
                        if (input) {
                            input.value = key.includes("Ngay") && data[key] ? data[key].split("T")[0] : data[key];
                        }
                    }
                    new bootstrap.Modal(document.getElementById("editModal")).show();
                });
        }

        function submitEditForm() {
            const formData = new FormData(document.getElementById("editForm"));
            const obj = {};
            formData.forEach((v, k) => { if (v) obj[k] = v; });

            fetch(`${apiBaseUrl}KhuyenMai/${obj.Id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(obj)
            }).then(r => {
                if (r.ok) Swal.fire("Thành công!", "Đã cập nhật.", "success").then(() => location.reload());
                else throw new Error("Lỗi cập nhật khuyến mãi");
            }).catch(e => Swal.fire("Thất bại!", e.message, "error"));
        }

        function deleteKhuyenMai(id) {
            Swal.fire({
                title: "Bạn có chắc chắn?",
                text: "Hành động này sẽ xoá khuyến mãi.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Xoá",
                cancelButtonText: "Huỷ"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`${apiBaseUrl}KhuyenMai/${id}`, { method: "DELETE" })
                        .then(r => {
                            if (r.ok) Swal.fire("Đã xoá!", "", "success").then(() => location.reload());
                            else throw new Error("Không thể xoá");
                        })
                        .catch(e => Swal.fire("Thất bại!", e.message, "error"));
                }
            });
        }
    </script>
}
