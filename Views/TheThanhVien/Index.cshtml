@model List<NailMVC.Models.TheThanhVien>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2 class="text-primary mb-4">Danh sách thẻ thành viên</h2>

<form class="row mb-3" method="get">
    <div class="col-md-4">
        <input type="text" name="maThe" class="form-control" placeholder="Nhập mã thẻ để lọc"
               value="@ViewBag.MaThe" />
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-primary">🔍 Tìm kiếm</button>
    </div>
</form>


<div class="d-flex justify-content-end mb-3">
    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addModal">➕ Thêm thẻ</button>
</div>

<table class="table table-striped table-bordered">
    <thead class="table-dark text-center">
        <tr>
            <th>Mã thẻ</th>
            <th>Loại thẻ</th>
            <th>Ngày cấp</th>
            <th>Ngày hết hạn</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="text-center">
                <td>@item.MaThe</td>
                <td>@item.LoaiThe</td>
                <td>@item.NgayCap?.ToString("dd/MM/yyyy")</td>
                <td>@item.NgayHetHan?.ToString("dd/MM/yyyy")</td>
                <td>
                    <button class="btn btn-sm btn-warning me-1" onclick="showEditModal(@item.Id)">Sửa</button>
                    <button class="btn btn-sm btn-danger" onclick="deleteThe(@item.Id)">Xoá</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal Thêm -->
<div class="modal fade" id="addModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Thêm thẻ thành viên</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createForm">
                    <div class="mb-3">
                        <label>Mã thẻ</label>
                        <input class="form-control" name="MaThe" required />
                    </div>
                    <div class="mb-3">
                        <label>Loại thẻ</label>
                        <input class="form-control" name="LoaiThe" />
                    </div>
                    <div class="mb-3">
                        <label>Ngày cấp</label>
                        <input class="form-control" name="NgayCap" type="date" />
                    </div>
                    <div class="mb-3">
                        <label>Ngày hết hạn</label>
                        <input class="form-control" name="NgayHetHan" type="date" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button class="btn btn-primary" onclick="submitForm()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sửa -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5 class="modal-title">Sửa thông tin thẻ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" name="Id" />
                    <div class="mb-3">
                        <label>Mã thẻ</label>
                        <input class="form-control" name="MaThe" required />
                    </div>
                    <div class="mb-3">
                        <label>Loại thẻ</label>
                        <input class="form-control" name="LoaiThe" />
                    </div>
                    <div class="mb-3">
                        <label>Ngày cấp</label>
                        <input class="form-control" name="NgayCap" type="date" />
                    </div>
                    <div class="mb-3">
                        <label>Ngày hết hạn</label>
                        <input class="form-control" name="NgayHetHan" type="date" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button class="btn btn-primary" onclick="submitEditForm()">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = "@ViewBag.ApiBaseUrl";

        function submitForm() {
            const form = document.getElementById("createForm");
            const data = Object.fromEntries(new FormData(form));

            fetch(apiBaseUrl + "TheThanhVien", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            })
                .then(res => res.ok ? Swal.fire("Đã thêm!", "Thẻ đã được thêm mới.", "success").then(() => location.reload()) : res.text().then(msg => { throw new Error(msg); }))
                .catch(err => Swal.fire("Lỗi!", err.message, "error"));
        }

        function showEditModal(id) {
            fetch(`${apiBaseUrl}TheThanhVien/${id}`)
                .then(res => res.json())
                .then(data => {
                    const form = document.getElementById("editForm");
                    for (let key in data) {
                        let input = form.querySelector(`[name="${key}"]`);
                        if (input) input.value = data[key]?.toString().split('T')[0] || '';
                    }
                    new bootstrap.Modal(document.getElementById("editModal")).show();
                });
        }

        function submitEditForm() {
            const form = document.getElementById("editForm");
            const data = Object.fromEntries(new FormData(form));

            fetch(`${apiBaseUrl}TheThanhVien/${data.Id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            })
                .then(res => res.ok ? Swal.fire("Đã cập nhật!", "Thông tin thẻ đã được cập nhật.", "success").then(() => location.reload()) : res.text().then(msg => { throw new Error(msg); }))
                .catch(err => Swal.fire("Lỗi!", err.message, "error"));
        }

        function deleteThe(id) {
            Swal.fire({
                title: "Xác nhận xoá?",
                text: "Hành động này không thể hoàn tác!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Xoá",
                cancelButtonText: "Hủy"
            }).then(result => {
                if (result.isConfirmed) {
                    fetch(`${apiBaseUrl}TheThanhVien/${id}`, { method: "DELETE" })
                        .then(res => res.ok ? Swal.fire("Đã xoá!", "Thẻ thành viên đã bị xoá.", "success").then(() => location.reload()) : res.text().then(msg => { throw new Error(msg); }))
                        .catch(err => Swal.fire("Lỗi!", err.message, "error"));
                }
            });
        }
    </script>
}
