@model List<NailMVC.Models.TaiKhoan>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2 class="text-primary mb-4">Danh sách tài khoản</h2>

<div class="d-flex justify-content-end mb-3">
    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addModal">➕ Thêm tài khoản</button>
</div>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Email</th>
            <th>Vai trò</th>
            <th>Ngày tạo</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Email</td>
                <td>@item.VaiTro</td>
                <td>@item.NgayTao.ToString("dd/MM/yyyy")</td>
                <td>
                    <button class="btn btn-sm btn-warning me-1" onclick="showEditModal(@item.Id)">Sửa</button>
                    <button class="btn btn-sm btn-danger" onclick="deleteTaiKhoan(@item.Id)">Xoá</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal Thêm -->
<div class="modal fade" id="addModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Thêm tài khoản mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createForm">
                    <div class="mb-3">
                        <label>Email</label>
                        <input class="form-control" name="Email" required />
                    </div>
                    <div class="mb-3">
                        <label>Mật khẩu</label>
                        <input class="form-control" name="MatKhau" type="password" required />
                    </div>
                    <div class="mb-3">
                        <label>Vai trò</label>
                        <select class="form-select" name="VaiTro">
                            <option value="Admin">Admin</option>
                            <option value="NhanVien">NhanVien</option>
                            <option value="QuanLy">QuanLy</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button class="btn btn-primary" onclick="submitForm()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sửa -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5 class="modal-title">Sửa tài khoản</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" name="Id" />
                    <div class="mb-3">
                        <label>Email</label>
                        <input class="form-control" name="Email" required />
                    </div>
                    <div class="mb-3">
                        <label>Mật khẩu</label>
                        <input class="form-control" name="MatKhau" type="password" required />
                    </div>
                    <div class="mb-3">
                        <label>Vai trò</label>
                        <select class="form-select" name="VaiTro">
                            <option value="Admin">Admin</option>
                            <option value="NhanVien">NhanVien</option>
                            <option value="QuanLy">QuanLy</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button class="btn btn-primary" onclick="submitEditForm()">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = "@ViewBag.ApiBaseUrl";

        function submitForm() {
            const data = Object.fromEntries(new FormData(document.getElementById("createForm")));
            fetch(apiBaseUrl + "TaiKhoan", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            })
            .then(res => res.ok ? Swal.fire("Thành công!", "Đã thêm tài khoản.", "success").then(() => location.reload()) : res.text().then(msg => { throw new Error(msg); }))
            .catch(err => Swal.fire("Lỗi!", err.message, "error"));
        }

        function showEditModal(id) {
            fetch(`${apiBaseUrl}TaiKhoan/${id}`)
                .then(res => res.json())
                .then(data => {
                    const form = document.getElementById("editForm");
                    for (let key in data) {
                        let input = form.querySelector(`[name="${key}"]`);
                        if (input) input.value = data[key];
                    }
                    new bootstrap.Modal(document.getElementById("editModal")).show();
                });
        }

        function submitEditForm() {
            const data = Object.fromEntries(new FormData(document.getElementById("editForm")));
            fetch(`${apiBaseUrl}TaiKhoan/${data.Id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            })
            .then(res => res.ok ? Swal.fire("Cập nhật thành công!", "Dữ liệu đã được cập nhật.", "success").then(() => location.reload()) : res.text().then(msg => { throw new Error(msg); }))
            .catch(err => Swal.fire("Lỗi!", err.message, "error"));
        }

        function deleteTaiKhoan(id) {
            Swal.fire({
                title: "Xác nhận xóa?",
                text: "Bạn sẽ không thể hoàn tác!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Xoá",
                cancelButtonText: "Hủy"
            }).then(result => {
                if (result.isConfirmed) {
                    fetch(`${apiBaseUrl}TaiKhoan/${id}`, { method: "DELETE" })
                        .then(res => res.ok ? Swal.fire("Đã xóa!", "Tài khoản đã bị xóa.", "success").then(() => location.reload()) : res.text().then(msg => { throw new Error(msg); }))
                        .catch(err => Swal.fire("Lỗi!", err.message, "error"));
                }
            });
        }
    </script>
}
